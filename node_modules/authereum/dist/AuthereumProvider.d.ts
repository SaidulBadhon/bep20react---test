import ProviderEngine from 'web3-provider-engine';
export declare type TTxParams = any;
export declare type TMsgParams = any;
export declare type TSignature = string;
export interface ICallback {
    (err: Error, result?: any): any;
}
export default class AuthereumProvider extends ProviderEngine {
    authereum: any;
    rpcUri: string;
    isAuthereum: boolean;
    private config;
    private rpcSubprovider;
    private notifier;
    private lastSignTx;
    private lastSignTxTimeout;
    private lastTx;
    private lastTxTimeout;
    private lastMsg;
    private lastMsgTimeout;
    private lastTypedMsg;
    private lastTypedMsgTimeout;
    constructor(config?: any);
    private setupNotifier;
    private concatAuthKeySig;
    private initSubprovider;
    private getAccounts;
    isConnected(): Promise<any>;
    enable(): Promise<any[]>;
    disable(): Promise<any>;
    private tilDomReady;
    signMessageWithAdminKey(message: any): any;
    showWidget(enabled?: boolean): any;
    widgetEnabled(): any;
}
